最开始使用暴力遍历的方式，设定两个for循环，一个从数组的最左开始，一个从最右开始，当最右的下标小与最左的下标时，计算每一次容水量大小，O(n2)的时间复杂度导致提交时间超时；
后面改用了双指针的方法，同样是一个从最左开始，一个从最右开始，但不同的是，因为容水量大小取决于【当前指针的值最小值以及两个指针的距离乘积】，所以可以每次只移动指向两个值间最小值的指针，并用指针指向的新对象与上一次指向的值比较；
若大于上一次的值，才需要进行一次计算（如果这次的值都比上次的小，并且左右的间距更短了，所以不用再计算结果；即使这次指向的值较大，乘积也不一定大于当前最大值（指针间距变短了））
最终的时间复杂度是O(1)，提交通过。